//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using Dos.ORM;
using SignUpTools.Model;

namespace SignUpTools.DAL
{
    /// <summary>
    /// 实体类ActivesManageApply。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    public class ActivesManageApplyDAL : SqlProvider<ActivesManageApplyModel>
    {
        public static ActivesManageApplyDAL dal = new ActivesManageApplyDAL();
        public bool DeleteActivesManageApply(Expression<Func<ActivesManageApplyModel, bool>> expression)
        {
            return Delete(expression);
        }

        public bool DeleteActivesManageApply(int id)
        {
            return Delete(m => m.ID == id);
        }

        public ActivesManageApplyModel GetActivesManageApplyModel(Expression<Func<ActivesManageApplyModel, bool>> expression)
        {
            return GetEntity(expression);
        }

        public ActivesManageApplyModel GetActivesManageApplyModel(int id)
        {
            return GetEntity(m => m.ID == id);
        }

        public List<ActivesManageApplyModel> GetActivesManageApplyModels(Expression<Func<ActivesManageApplyModel, bool>> expression)
        {
            return GetList(expression);
        }

        public bool InsertActivesManageApplyModel(ActivesManageApplyModel entity)
        {
            return Insert(entity);
        }

        public bool InsertActivesManageApplyModel(List<ActivesManageApplyModel> entities)
        {
            return Insert(entities);
        }

        public bool UpdateActivesManageApplyModel(ActivesManageApplyModel entity)
        {
            return Update(entity);
        }

        public bool UpdateActivesManageApplyModel(Dictionary<Field, object> fields, Expression<Func<ActivesManageApplyModel, bool>> expression)
        {
            return Update(fields, expression);
        }


    }
}